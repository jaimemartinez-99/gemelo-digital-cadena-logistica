akka {
    loglevel = "DEBUG"
}

#akka.actor.allow-java-serialization = on

nombreSistema = "EscenarioIntermedioDemo"
nombreSistemaMaster = "sistemaMaster"
nombreTrenMaster = "trenMaster"
nombreAlmacenMaster = "almacenMaster"
nombreFabricaMaster = "fabricaMaster"
localizaciones = ["MADRID1", "MADRID2", "MADRID3", "MADRID4", "VALENCIA1", "VALENCIA2", "VALENCIA3", "BARCELONA1", "BARCELONA2", "BARCELONA3",  "BILBAO", "ZARAGOZA1", "ZARAGOZA2", "SEVILLA", "LACORUNA", "VALLADOLID", "PAMPLONA", "ALICANTE", "MALAGA", "GRANADA" ]
clientes = ["CLIENTE 1", "CLIENTE 2", "CLIENTE 3", "CLIENTE 4", "CLIENTE 5", "CLIENTE 6", "CLIENTE 7", "CLIENTE 8", "CLIENTE 9", "CLIENTE 10", "CLIENTE 11"]
rutas = {
    ruta1 = [1, 4, 10],
    ruta2 = [2, 5, 11, 17],
    ruta3 = [3, 6, 16, 14],
    ruta4 = [1, 8, 13, 14],
    ruta5 = [1, 7, 9],
    ruta6 = [12, 5, 4],
    ruta7 = [19, 18, 20, 7],
    ruta8 = [1, 7, 11, 3, 17],
    ruta9 = [1, 5, 18, 19, 9],
    ruta10 = [13, 16, 8, 20],
    ruta11 = [14, 5, 15, 20, 10],
    ruta12 = [1, 11, 17, 13]
}
capacidadesTrenes = {
    capacidadTren1 = 100,
    capacidadTren2 = 150,
    capacidadTren3 = 200,
    capacidadTren4 = 50,
    capacidadTren5 = 120,
    capacidadTren6 = 150,
    capacidadTren7 = 120,
    capacidadTren8 = 175,
    capacidadTren9 = 90,
    capacidadTren10 = 130,
    capacidadTren11 = 125,
    capacidadTren12 = 250
}
locsFabrica = ["MADRID1", "MADRID2", "MADRID3", "MADRID4", "VALENCIA1", "VALENCIA2", "VALENCIA3", "BARCELONA1", "BARCELONA2", "BARCELONA3",  "BILBAO", "ZARAGOZA1", "ZARAGOZA2", "SEVILLA", "LACORUNA", "VALLADOLID", "PAMPLONA", "ALICANTE", "MALAGA", "GRANADA" ]
locsAlmacen = ["MADRID1", "MADRID2", "MADRID3", "MADRID4", "VALENCIA1", "VALENCIA2", "VALENCIA3", "BARCELONA1", "BARCELONA2", "BARCELONA3",  "BILBAO", "ZARAGOZA1", "ZARAGOZA2", "SEVILLA", "LACORUNA", "VALLADOLID", "PAMPLONA", "ALICANTE", "MALAGA", "GRANADA" ]
factorVelocidad = 3840
dateTime = {
    year = 2020,
    month = 3,
    day = 4,
    hour = 3,
    minute = 21,
    second = 0,
    dateTimeZone = 1
}

# Properties for akka.kafka.ProducerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka.kafka.producer {
  # Config path of Akka Discovery method
  # "akka.discovery" to use the Akka Discovery method configured for the ActorSystem
  discovery-method = akka.discovery

  # Set a service name for use with Akka Discovery
  # https://doc.akka.io/docs/alpakka-kafka/current/discovery.html
  service-name = ""

  # Timeout for getting a reply from the discovery-method lookup
  resolve-timeout = 3 seconds

  # Tuning parameter of how many sends that can run in parallel.
  # In 2.0.0: changed the default from 100 to 10000
  parallelism = 10000

  # Duration to wait for `KafkaProducer.close` to finish.
  close-timeout = 60s

  # Call `KafkaProducer.close` when the stream is shutdown. This is important to override to false
  # when the producer instance is shared across multiple producer stages.
  close-on-producer-stop = true

  # Fully qualified config path which holds the dispatcher configuration
  # to be used by the producer stages. Some blocking may occur.
  # When this value is empty, the dispatcher configured for the stream
  # will be used.
  use-dispatcher = "akka.kafka.default-dispatcher"

  # The time interval to commit a transaction when using the `Transactional.sink` or `Transactional.flow`
  # for exactly-once-semantics processing.
  eos-commit-interval = 100ms

  # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
  # can be defined in this configuration section.
  kafka-clients {
    bootstrap.servers = "127.0.0.1:9093"
    bootstrap.servers = "localhost:6001"
  }
}